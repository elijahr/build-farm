# Rendered from .github/workflows/build.yml.jinja

name: debian:buster

on:
  push:
    branches: ['*']
    tags: ['*']

jobs:
  build-host-amd64:
    name: |
      host: amd64
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Enable Docker experimental features
      run: |
        echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
        sudo service docker restart
        docker version -f '{{.Server.Experimental}}'

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build host image
      run: |
        ./builder.py build-host \
          --distro debian:buster \
          --host-arch amd64 \
          --tag $(basename ${{ github.event.ref }}) \
          --push

  build-host-i386:
    name: |
      host: i386
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Enable Docker experimental features
      run: |
        echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
        sudo service docker restart
        docker version -f '{{.Server.Experimental}}'

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build host image
      run: |
        ./builder.py build-host \
          --distro debian:buster \
          --host-arch i386 \
          --tag $(basename ${{ github.event.ref }}) \
          --push

  build-host-arm32v7:
    name: |
      host: arm32v7
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Enable Docker experimental features
      run: |
        echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
        sudo service docker restart
        docker version -f '{{.Server.Experimental}}'

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build host image
      run: |
        ./builder.py build-host \
          --distro debian:buster \
          --host-arch arm32v7 \
          --tag $(basename ${{ github.event.ref }}) \
          --push

  build-host-arm64v8:
    name: |
      host: arm64v8
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Enable Docker experimental features
      run: |
        echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
        sudo service docker restart
        docker version -f '{{.Server.Experimental}}'

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build host image
      run: |
        ./builder.py build-host \
          --distro debian:buster \
          --host-arch arm64v8 \
          --tag $(basename ${{ github.event.ref }}) \
          --push

  build-host-ppc64le:
    name: |
      host: ppc64le
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Enable Docker experimental features
      run: |
        echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
        sudo service docker restart
        docker version -f '{{.Server.Experimental}}'

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build host image
      run: |
        ./builder.py build-host \
          --distro debian:buster \
          --host-arch ppc64le \
          --tag $(basename ${{ github.event.ref }}) \
          --push

  build-host-s390x:
    name: |
      host: s390x
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Enable Docker experimental features
      run: |
        echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
        sudo service docker restart
        docker version -f '{{.Server.Experimental}}'

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build host image
      run: |
        ./builder.py build-host \
          --distro debian:buster \
          --host-arch s390x \
          --tag $(basename ${{ github.event.ref }}) \
          --push



  build-client-amd64:
    name: |
      client: amd64

    runs-on: ubuntu-latest
    needs:
    - build-host-amd64

    - build-host-i386

    - build-host-arm32v7

    - build-host-arm64v8

    - build-host-ppc64le

    - build-host-s390x


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Enable Docker experimental features
      run: |
        echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
        sudo service docker restart
        docker version -f '{{.Server.Experimental}}'

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro debian:buster \
          --client-arch amd64 \
          --tag $(basename ${{ github.event.ref }}) \
          --push

  build-client-i386:
    name: |
      client: i386

    runs-on: ubuntu-latest
    needs:
    - build-host-amd64

    - build-host-i386

    - build-host-arm32v7

    - build-host-arm64v8

    - build-host-ppc64le

    - build-host-s390x


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Enable Docker experimental features
      run: |
        echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
        sudo service docker restart
        docker version -f '{{.Server.Experimental}}'

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro debian:buster \
          --client-arch i386 \
          --tag $(basename ${{ github.event.ref }}) \
          --push

  build-client-arm32v7:
    name: |
      client: arm32v7

    runs-on: ubuntu-latest
    needs:
    - build-host-amd64

    - build-host-i386

    - build-host-arm32v7

    - build-host-arm64v8

    - build-host-ppc64le

    - build-host-s390x


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Enable Docker experimental features
      run: |
        echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
        sudo service docker restart
        docker version -f '{{.Server.Experimental}}'

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro debian:buster \
          --client-arch arm32v7 \
          --tag $(basename ${{ github.event.ref }}) \
          --push

  build-client-arm64v8:
    name: |
      client: arm64v8

    runs-on: ubuntu-latest
    needs:
    - build-host-amd64

    - build-host-i386

    - build-host-arm32v7

    - build-host-arm64v8

    - build-host-ppc64le

    - build-host-s390x


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Enable Docker experimental features
      run: |
        echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
        sudo service docker restart
        docker version -f '{{.Server.Experimental}}'

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro debian:buster \
          --client-arch arm64v8 \
          --tag $(basename ${{ github.event.ref }}) \
          --push

  build-client-ppc64le:
    name: |
      client: ppc64le

    runs-on: ubuntu-latest
    needs:
    - build-host-amd64

    - build-host-i386

    - build-host-arm32v7

    - build-host-arm64v8

    - build-host-ppc64le

    - build-host-s390x


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Enable Docker experimental features
      run: |
        echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
        sudo service docker restart
        docker version -f '{{.Server.Experimental}}'

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro debian:buster \
          --client-arch ppc64le \
          --tag $(basename ${{ github.event.ref }}) \
          --push

  build-client-s390x:
    name: |
      client: s390x

    runs-on: ubuntu-latest
    needs:
    - build-host-amd64

    - build-host-i386

    - build-host-arm32v7

    - build-host-arm64v8

    - build-host-ppc64le

    - build-host-s390x


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Enable Docker experimental features
      run: |
        echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
        sudo service docker restart
        docker version -f '{{.Server.Experimental}}'

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro debian:buster \
          --client-arch s390x \
          --tag $(basename ${{ github.event.ref }}) \
          --push


  push_manifests:
    name: Push manifests
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
      }}

    runs-on: ubuntu-latest
    needs:
    - build-client-amd64

    - build-client-i386

    - build-client-arm32v7

    - build-client-arm64v8

    - build-client-ppc64le

    - build-client-s390x


    strategy:
      matrix:
        include:
        - manifest_tag: latest
          image_tag: ${{ github.ref }}
        - manifest_tag: ${{ github.ref }}
          image_tag: ${{ github.ref }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Enable Docker experimental features
      run: |
        echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
        sudo service docker restart
        docker version -f '{{.Server.Experimental}}'

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Push host manifest
      run: |
        ./builder.py push-host-manifest \
          --distro debian:buster \
          --manifest-tag $(basename ${{ matrix.manifest_tag }}) \
          --image-tag $(basename ${{ matrix.image_tag }})

    - name: Push client manifest
      run: |-
        ./builder.py push-client-manifest \
          --distro debian:buster \
          --manifest-tag $(basename ${{ matrix.manifest_tag }}) \
          --image-tag $(basename ${{ matrix.image_tag }})
