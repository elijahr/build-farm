name: Build images

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]

jobs:
  build:
    name: Build archlinux ${{ matrix.arch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - arch: amd64
            host_releaser: true
          - arch: arm32v5
          - arch: arm32v6
          - arch: arm32v7
          - arch: arm64v8

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update -q -y
          sudo apt-get -qq install -y qemu qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Render templates
        run: ./scripts/render-templates.py

      - name: Build host image
        run: |
          latest_tag=elijahru/distcc-cross-compiler-host-archlinux:latest-amd64
          dockerfile=rendered/Dockerfile.distcc-cross-compiler-host-archlinux.amd64
          docker pull $latest_tag || true
          docker build . \
            --file $dockerfile \
            --tag $latest_tag \
            --cache-from=$latest_tag

      - name: Build client image
        run: |
          latest_tag=elijahru/distcc-cross-compiler-client-archlinux:latest-${{ matrix.arch }}
          dockerfile=rendered/Dockerfile.distcc-cross-compiler-client-archlinux.${{ matrix.arch }}

          docker pull $latest_tag || true
          docker build . \
            --file $dockerfile \
            --tag $latest_tag \
            --cache-from=$latest_tag

      - name: Run tests
        run: |
          ./scripts/run-tests-archlinux.sh \
            amd64 \
            ${{ matrix.arch }}

      - name: Tag host release image
        if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/') && matrix.host_releaser }}
        run: |
          version=$(basename ${{ github.ref}})
          latest_tag=elijahru/distcc-cross-compiler-host-archlinux:latest-amd64
          version_tag=elijahru/distcc-cross-compiler-host-archlinux:${version}-amd64

          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
            -u elijahru --password-stdin

          docker images
          docker tag $latest_tag $version_tag
          docker push $latest_tag
          docker push $version_tag

      - name: Tag client release image
        if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/') }}
        run: |
          version=$(basename ${{ github.ref}})
          latest_tag=elijahru/distcc-cross-compiler-client-archlinux:latest-${{ matrix.arch }}
          version_tag=elijahru/distcc-cross-compiler-client-archlinux:${version}-${{ matrix.arch }}

          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
            -u elijahru --password-stdin

          docker images
          docker tag $latest_tag $version_tag
          docker push $latest_tag
          docker push $version_tag

  push_manifests:
    name: Push manifests
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/') }}

    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        version: [ latest, '${{ github.ref }}' ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Push manifest
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
            -u elijahru --password-stdin
          docker images
          ./scripts/push-manifests-archlinux.sh \
            $(basename ${{ matrix.version }})
