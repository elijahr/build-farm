# Rendered from .github/workflows/build.yml.jinja

name: archlinux

on:
  push:
    branches: ['*']
    tags: ['*']

jobs:
  build-host-amd64:
    name: |
      host: amd64
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build host image
      run: |
        ./builder.py build-host \
          --distro archlinux \
          --host-arch amd64 \
          --tag $(basename ${{ github.event.ref }}) \
          --push



  build-client-amd64:
    name: |
      client: amd64
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro archlinux \
          --client-arch amd64 \
          --tag $(basename ${{ github.event.ref }}) \
          --push

  build-client-arm32v5:
    name: |
      client: arm32v5
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro archlinux \
          --client-arch arm32v5 \
          --tag $(basename ${{ github.event.ref }}) \
          --push

  build-client-arm32v6:
    name: |
      client: arm32v6
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro archlinux \
          --client-arch arm32v6 \
          --tag $(basename ${{ github.event.ref }}) \
          --push

  build-client-arm32v7:
    name: |
      client: arm32v7
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro archlinux \
          --client-arch arm32v7 \
          --tag $(basename ${{ github.event.ref }}) \
          --push

  build-client-arm64v8:
    name: |
      client: arm64v8
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro archlinux \
          --client-arch arm64v8 \
          --tag $(basename ${{ github.event.ref }}) \
          --push




  run-tests-amd64-amd64:
    name: |
      test (host: amd64, client: amd64)
    runs-on: ubuntu-latest
    needs:
    - build-host-amd64
    - build-client-amd64

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Run tests
      run: |
        ./builder.py test \
          --distro archlinux \
          --host-arch amd64 \
          --client-arch amd64 \
          --tag $(basename ${{ github.event.ref }})

  run-tests-amd64-arm32v5:
    name: |
      test (host: amd64, client: arm32v5)
    runs-on: ubuntu-latest
    needs:
    - build-host-amd64
    - build-client-arm32v5

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Run tests
      run: |
        ./builder.py test \
          --distro archlinux \
          --host-arch amd64 \
          --client-arch arm32v5 \
          --tag $(basename ${{ github.event.ref }})

  run-tests-amd64-arm32v6:
    name: |
      test (host: amd64, client: arm32v6)
    runs-on: ubuntu-latest
    needs:
    - build-host-amd64
    - build-client-arm32v6

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Run tests
      run: |
        ./builder.py test \
          --distro archlinux \
          --host-arch amd64 \
          --client-arch arm32v6 \
          --tag $(basename ${{ github.event.ref }})

  run-tests-amd64-arm32v7:
    name: |
      test (host: amd64, client: arm32v7)
    runs-on: ubuntu-latest
    needs:
    - build-host-amd64
    - build-client-arm32v7

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Run tests
      run: |
        ./builder.py test \
          --distro archlinux \
          --host-arch amd64 \
          --client-arch arm32v7 \
          --tag $(basename ${{ github.event.ref }})

  run-tests-amd64-arm64v8:
    name: |
      test (host: amd64, client: arm64v8)
    runs-on: ubuntu-latest
    needs:
    - build-host-amd64
    - build-client-arm64v8

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Run tests
      run: |
        ./builder.py test \
          --distro archlinux \
          --host-arch amd64 \
          --client-arch arm64v8 \
          --tag $(basename ${{ github.event.ref }})



  push_manifests:
    name: Push manifests
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
      }}

    runs-on: ubuntu-latest
    needs:
    - run-tests-amd64-amd64

    - run-tests-amd64-arm32v5

    - run-tests-amd64-arm32v6

    - run-tests-amd64-arm32v7

    - run-tests-amd64-arm64v8



    strategy:
      matrix:
        include:
        - version: latest
        - version: ${{ github.ref }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Push host manifest
      run: |
        ./builder.py push-host-manifest \
          --distro archlinux \
          --tag $(basename ${{ matrix.version }})

    - name: Push client manifest
      run: |-
        ./builder.py push-client-manifest \
          --distro archlinux \
          --tag $(basename ${{ matrix.version }})
