_anchors:
  checkout_repo: &checkout_repo
    name: Checkout repo
    uses: actions/checkout@v2
    with:
      fetch-depth: 1
      submodules: recursive

  install_apt_requirements: &install_apt_requirements
    name: Install apt requirements
    run: |
      sudo apt-get update -q -y
      sudo apt-get -qq install -y python3-setuptools

  configure_qemu: &configure_qemu
    name: Configure QEMU
    run: |
      sudo apt-get update -q -y
      sudo apt-get -qq install -y qemu qemu-user-static
      docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

  install_pip_requirements: &install_pip_requirements
    name: Install pip requirements
    run: |
      pip3 install -r requirements.txt

  dockerhub_login: &dockerhub_login
    name: Login to Docker Hub
    uses: docker/login-action@v1
    with:
      registry: docker.io
      username: elijahru
      password: {% raw %}${{ secrets.DOCKERHUB_TOKEN }}{% endraw %}

  ghcr_login: &ghcr_login
    name: Login to GitHub Container Registry
    uses: docker/login-action@v1
    with:
      registry: ghcr.io
      username: {% raw %}${{ github.repository_owner }}{% endraw %}
      password: {% raw %}${{ secrets.GHCR_PERSONAL_ACCESS_TOKEN }}{% endraw %}

  enable_docker_experimental_features: &enable_docker_experimental_features
    name: Enable Docker experimental features
    run: |
      echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
      sudo service docker restart
      docker version -f '{{ '{{.Server.Experimental}}' }}'

name: {{ distro.name }}

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]

jobs:
  {% for host_arch in distro.host_archs %}
  build-host-{{ host_arch|arch_slug }}:
    name: |
      host: {{ host_arch }}
    runs-on: ubuntu-latest

    steps:
      - *checkout_repo
      - *configure_qemu
      - *install_apt_requirements
      - *install_pip_requirements
      - *enable_docker_experimental_features
      - *dockerhub_login
      - *ghcr_login
      - name: Build host image
        run: |
          ./builder.py build-host \
            --distro {{ distro.name }} \
            --host-arch {{ host_arch }} \
            --version $(basename {% raw %}${{ github.event.ref }}{% endraw %}) \
            --push
  {% endfor %}

  {% for compiler_arch in distro.compiler_archs %}
  build-client-{{ compiler_arch|arch_slug }}:
    name: |
      client: {{ compiler_arch }}

    runs-on: ubuntu-latest
    needs:
      - build-host-amd64

    steps:
      - *checkout_repo
      - *configure_qemu
      - *install_apt_requirements
      - *install_pip_requirements
      - *enable_docker_experimental_features
      - *dockerhub_login
      - *ghcr_login
      - name: Build client image
        run: |
          ./builder.py build-client \
            --distro {{ distro.name }} \
            --client-arch {{ compiler_arch }} \
            --version $(basename {% raw %}${{ github.event.ref }}{% endraw %}) \
            --push
  {% endfor %}

  push_manifests:
    name: Push manifests
    if: {% raw %}${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/') }}{% endraw %}

    runs-on: ubuntu-latest
    needs:
      {% for host_arch in distro.host_archs %}
      - build-host-{{ host_arch|arch_slug }}
      {% endfor %}
      {% for compiler_arch in distro.compiler_archs %}
      - build-client-{{ compiler_arch|arch_slug }}
      {% endfor %}

    steps:
      - *checkout_repo
      - *install_apt_requirements
      - *install_pip_requirements
      - *enable_docker_experimental_features
      - *dockerhub_login
      - *ghcr_login
      - name: Push host manifest
        run: |
          ./builder.py push-host-manifest \
            --distro {{ distro.name }} \
            --version $(basename {% raw %}${{ github.event.ref }}{% endraw %})

      - name: Push client manifest
        run: |
          ./builder.py push-client-manifest \
            --distro {{ distro.name }} \
            --version $(basename {% raw %}${{ github.event.ref }}{% endraw %})

  tag_latest:
    name: Tag latest
    if: {% raw %}${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/') }}{% endraw %}

    runs-on: ubuntu-latest
    needs:
      - push_manifests

    steps:
      - *checkout_repo
      - *install_apt_requirements
      - *install_pip_requirements
      - *enable_docker_experimental_features
      - *dockerhub_login
      - *ghcr_login
      - name: Tag host latest
        run: |
          ./builder.py tag-host-latest \
            --distro {{ distro.name }} \
            --version $(basename {% raw %}${{ github.event.ref }}{% endraw %})

      - name: Tag client latest
        run: |
          ./builder.py tag-client-latest \
            --distro {{ distro.name }} \
            --version $(basename {% raw %}${{ github.event.ref }}{% endraw %})
